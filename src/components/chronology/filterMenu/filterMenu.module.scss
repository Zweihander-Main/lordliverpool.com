@use '~styles/util/variables.module' as v;
@use '~styles/util/mixins.module' as m;
@use 'sass:color';

.filter-menu {
	@include m.neumorphic-intensity(
		7px,
		14px,
		v.$blue-bg,
		60%
	); // TODO consistency in terms of intensity, shadow spread, ect.

	align-items: center;
	background: #051926;
	border-bottom: 1px solid color.adjust(v.$blue-bg, $lightness: 8%);
	border-radius: 0 0 v.$border-radius-normal * 2 v.$border-radius-normal * 2; //TODO border radius in some other unit or proportional to the size?
	color: v.$white;
	display: flex;
	flex-direction: row;
	grid-area: FilterMenu;
	justify-content: space-around;
	margin: 0 250px; //TODO nope -- redo grid as well
	transition: 100ms v.$timing-function;
	z-index: 9;
	// TODO adjust based on new menu size when you resize it

	@include m.media('<=ultrawide') {
		margin: 0 200px;
	}

	@include m.media('<=wide') {
		margin: 0 100px;
	}

	@include m.media('<=desktop') {
		margin: 0 4.5rem;
	}

	@include m.media('<=tablet') {
		display: flex;
		flex-direction: column;
		height: max-content;
		min-height: 100%;
		overflow-y: hidden;
		position: relative;
		top: 0;
		z-index: 99999;
	}
}

.filter-menu-mobile {
	align-items: center;
	display: flex;
	flex-direction: row;
	justify-content: space-around;
	transition: 100ms v.$timing-function; //TODO -- logic to 150ms?
	width: 100%;

	@include m.media('<=tablet') {
		box-sizing: content-box;
		display: block;
		height: 0;
		margin: 0 auto;
		padding: 0;
		text-align: center;
		transform: translateY(-100vh);
		width: max-content;
		will-change: transform;

		.filter-menu-link {
			margin-top: 0.5rem;
		}
	}
}

.filter-menu-link {
	@include m.header-normal;

	border-radius: v.$border-radius-normal;
	cursor: pointer;
	margin: 0;
	padding: 0.6rem 2rem;
	transition: 100ms v.$timing-function; // TODO consistency on button transition
	z-index: 999;

	@include m.media('height<=HEIGHT_short') {
		@include m.filter-menu-link-small;
	}

	@include m.media('<=desktop') {
		@include m.filter-menu-link-small;
	}

	@include m.media('<=tablet') {
		margin: 0 auto;
		width: max-content;
	}

	&:hover {
		@include m.neumorphic-button(
			3px,
			6px,
			#051926,
			55%
		); // TODO shadow -- button consistency
	}
}

.selected-link,
.filter-menu-input:checked ~ .filter-menu-button-container > .filter-menu-link {
	@include m.neumorphic-button(-3px, 6px, #051926, 60%);

	color: v.$light-bg;

	&:hover {
		@include m.neumorphic-button(-3px, 6px, #051926, 60%);
	}
}

.filter-menu-input {
	display: none;

	@include m.media('<=tablet') {
		&:checked ~ .filter-menu-mobile {
			height: 100%;
			padding: 0 0 1rem;
			transform: translateY(0);
		}
	}
}

.filter-menu-button-container {
	display: none;

	@include m.media('<=tablet') {
		display: block;
	}
}
